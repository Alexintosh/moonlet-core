import { assert } from "chai";
import mocha from "mocha";

const BN = require( 'bn.js' );
import { util as OfficialUtil } from 'zilliqa-js';
import { Zilliqa } from 'zilliqa-js';

describe("Zilliqa", async () => {

    describe("Transaction Test", async () => {

        it("Should work", async () => {

            const zilliqa = new Zilliqa({
                nodeUrl: 'https://scilla-test-api.aws.z7a.xyz/',
            });

            const privateKey = "891E98DBEF714F120958405F5CF1FA4F47496D0B287E514C1A7EC02805DA3C13";
            const myCode = "";
            const contractState = [
            {
                vname: "owner",
                type : "ByStr20",
                value : "7bb3b0e8a59f3f61d9bff038f4aeb42cae2ecce8",
            },
            {
                vname: "_creation_block",
                type: "BNum",
                value: "1",
            }];

            const transactionDetails = {
                version: 0,
                nonce: 2,
                to: '22537dfddb1232be8ce10c7fc4b784f61a4375a9',
                amount: new BN( 10 ) ,
                gasPrice: 1,
                gasLimit: 10,
                code: '',
                data: '',
                pubKey: zilliqa.util.getPubKeyFromPrivateKey(privateKey),
            };

            const tx = OfficialUtil.createTransactionJson( privateKey, transactionDetails );

            const node = zilliqa.getNode();
            const exec = await node.createTransaction(tx, (err, data) => {
                if (err || data.error) {
                    console.log('Error:', err, data);
                } else {
                    console.log('OK:', data.result);
                }
            });

            console.log("official tx:", tx);
        });

    });

});
